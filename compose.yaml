services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      target: devcontainer
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
      - go-build-cache:/root/.cache/go-build
    command: sleep infinity
  otelcol:
    # https://opentelemetry.io/docs/collector/installation/#docker-compose
    container_name: otelcol
    image: otel/opentelemetry-collector-contrib:$OTELCOL_VERSION
    volumes:
      - ./.otelcol.yaml:/etc/otelcol-contrib/config.yaml
    environment:
      - OTELCOL_GRPC_PORT=$OTELCOL_GRPC_PORT
      - OTELCOL_HTTP_PORT=$OTELCOL_HTTP_PORT

  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./.tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      # - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      # - "9411"   # zipkin
    depends_on:
      - init

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./.prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - ./.grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"

volumes:
  go-mod-cache:
  go-build-cache: